/**
 * SQLSpaces Examples
 * User: giemza
 * Date: 09.02.12
 * Time: 22:13
 */

// Import the sqlspaces libs
var TS = require('../index.js');

// Create a tuplspace instance
// THIS WILL ONLY FUNCTION IF YOU HAVE A LOCAL SQLSPACE RUNNING
// ==> http://sqlspaces.collide.info
console.log('Connecting to tuplespace on localhost. Make sure you have a SQLSpaces server running!')

var onError = function(error) {
    if (error.code === 'ECONNREFUSED') {
        console.log("Kein Server da!")
    }
};
var space = new TS.TupleSpace({host:'localhost', timeout: 500, port:2525, debug:false, space:'nodejsspace', onError: onError});

/**
 * register a callback for all tuples that are written into the tuplespace
 */
space.eventRegister('write', new TS.Tuple(), function(callback) {
    if (callback.after) {
        console.log('\n\nReceived callback: \n');
        console.log(JSON.stringify(callback.after.tuple.toJSON()) + '\n');
    }
});

/**
 * write a simple tuple into the space
 * tuple == <'NodeJSTuple'>
 */
space.write(new TS.Tuple([TS.createActualField('string', 'NodeJSTuple')]));

/**
 * read all tuple and print them to console
 */
space.readAll(new TS.Tuple([TS.createWildcardField()]), function (tuples) {
    if (tuples.length > 0) {

        console.log('\nReceived the following tuples: \n');

        tuples.forEach(function (tuple) {
            console.log(JSON.stringify(tuple.toJSON()) + '\n');
        });

    } else {
        console.log('No tuples');
    }
    // finally disconnect and quit the app
    space.disconnect(function () {
        console.log('Exitissimo & KTHXBYE!');
        process.exit(0);
    });
});