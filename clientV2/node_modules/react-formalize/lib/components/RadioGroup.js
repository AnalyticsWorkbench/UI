'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _connectInput = require('../hoc/connectInput');

var _connectInput2 = _interopRequireDefault(_connectInput);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var createRadio = function createRadio(name, selectedValue, disabled, onChange) {
    return (0, _react.createClass)({
        displayName: 'Radio',
        propTypes: {
            value: _react.PropTypes.string.isRequired
        },
        handleChange: function handleChange() {
            var value = this.props.value;

            onChange(value);
        },
        render: function render() {
            var value = this.props.value;

            return _react2.default.createElement('input', _extends({}, this.props, {
                type: 'radio',
                name: name,
                checked: value === selectedValue,
                disabled: disabled,
                onChange: this.handleChange }));
        }
    });
};

var RadioGroup = (0, _react.createClass)({
    displayName: 'RadioGroup',
    propTypes: {
        name: _react.PropTypes.string.isRequired,
        value: _react.PropTypes.string.isRequired,
        options: _react.PropTypes.object,
        disabled: _react.PropTypes.bool,
        onChange: _react.PropTypes.func.isRequired,
        children: _react.PropTypes.func
    },
    renderOptions: function renderOptions(Radio, options) {
        var children = [];
        for (var value in options) {
            if (!options.hasOwnProperty(value)) continue;
            var label = options[value];
            children.push(_react2.default.createElement(
                'span',
                _defineProperty({ key: value }, 'key', value),
                _react2.default.createElement(Radio, { value: value }),
                ' ',
                label
            ));
        }
        return children;
    },
    render: function render() {
        var _props = this.props;
        var name = _props.name;
        var options = _props.options;
        var value = _props.value;
        var disabled = _props.disabled;
        var onChange = _props.onChange;
        var children = _props.children;

        var props = _objectWithoutProperties(_props, ['name', 'options', 'value', 'disabled', 'onChange', 'children']);

        var Radio = createRadio(name, value, disabled, onChange);
        if (options) return _react2.default.createElement(
            'div',
            props,
            this.renderOptions(Radio, options)
        );
        return children(Radio, props);
    }
});

var serialize = function serialize(value) {
    return value;
};

exports.default = (0, _connectInput2.default)(RadioGroup, { serialize: serialize });